// <auto-generated />
using System;
using FixtureApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FixtureApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FixtureApp.Data.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("MatchDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TeamLeftId")
                        .HasColumnType("int");

                    b.Property<int>("TeamRightId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamLeftId");

                    b.HasIndex("TeamRightId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("FixtureApp.Data.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Team1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Team2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Team3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Team4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Team5"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Team6"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Team7"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Team8"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Team9"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Team10"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Team11"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Team12"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Team13"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Team14"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Team15"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Team16"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Team17"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Team18"
                        });
                });

            modelBuilder.Entity("FixtureApp.Data.Match", b =>
                {
                    b.HasOne("FixtureApp.Data.Team", "TeamLeft")
                        .WithMany("MatchsL")
                        .HasForeignKey("TeamLeftId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FixtureApp.Data.Team", "TeamRight")
                        .WithMany("MatchsR")
                        .HasForeignKey("TeamRightId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
